# 2020_5-19_CodePractice

public class QuickSort {

    public static void main(String[] args) {
        int[] a={2,3,1,4,6,2,9,0,1};
        print(a);
        quickSort(a);
        print(a);

    }

    private static void print(int[] a) {
        for(int i=0;i<a.length;i++){
            System.out.print(a[i]+"");
        }
        System.out.println();
    }

    public static void quickSort(int[] array) {
        quickSortInter(array, 0, array.length - 1);
    }

    // [left, right]
    private static void quickSortInter(int[] a, int left, int right) {
        if (left >= right) {
            // 直到 长度 <= 1
            return;
        }
        // 1. 选择基准值 array[left]
        // 2. 做 partition
        int pivotIndex = partition1(a, left, right);
        // 左边小区间 [left, pivotIndex - 1]
        // 右边小区间 [pivotIndex + 1, right]
        // 3. 分别对左右小区间按同样方式处理
        quickSortInter(a, left, pivotIndex - 1);
        quickSortInter(a, pivotIndex + 1, right);
    }
    //partition之挖坑
    private static int partition1(int[] a, int left, int right) {
        
        int pivot = a[left];
        // [left, begin)        <= pivot
        // (end, right]         >= pivot
        while (left < right) {
            while (left < right && a[right] >= pivot) {
                right--;
            }
            a[left]=a[right];
            while (left < right && a[left] <= pivot) {
                left++;
            }
            a[right]=a[left];
        }
        a[left]=pivot;
        return left;
    }

    private static void swap(int[] a, int i, int i1) {
        int tmp=0;
        tmp=a[i];
        a[i]=a[i1];
        a[i1]=tmp;
    }
}


